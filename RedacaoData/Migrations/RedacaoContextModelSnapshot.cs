// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedacaoData;

namespace Redacao.Data.Migrations
{
    [DbContext(typeof(RedacaoContext))]
    partial class RedacaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Redacao.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Size");

                    b.HasKey("Id");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Redacao.Domain.Entities.Redacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200);

                    b.Property<Guid>("DocumentoId");

                    b.Property<Guid>("StatusRedacaoId");

                    b.Property<Guid>("TemaRedacaoId");

                    b.Property<Guid>("TipoRedacaoId");

                    b.Property<Guid>("UsuarioAlunoId");

                    b.Property<Guid?>("UsuarioProfessorId");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId")
                        .IsUnique();

                    b.HasIndex("StatusRedacaoId");

                    b.HasIndex("TemaRedacaoId");

                    b.HasIndex("TipoRedacaoId");

                    b.HasIndex("UsuarioAlunoId");

                    b.HasIndex("UsuarioProfessorId");

                    b.ToTable("Redacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entities.StatusRedacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("StatusRedacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entities.TemaRedacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TemaRedacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entities.TipoRedacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipoRedacao");
                });

            modelBuilder.Entity("Redacao.Domain.Entities.Redacao", b =>
                {
                    b.HasOne("Redacao.Domain.Entities.Documento", "Documento")
                        .WithOne("Redacao")
                        .HasForeignKey("Redacao.Domain.Entities.Redacao", "DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Redacao.Domain.Entities.StatusRedacao", "StatusRedacao")
                        .WithMany("Redacoes")
                        .HasForeignKey("StatusRedacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Redacao.Domain.Entities.TemaRedacao", "TemaRedacao")
                        .WithMany("Redacoes")
                        .HasForeignKey("TemaRedacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Redacao.Domain.Entities.TipoRedacao", "TipoRedacao")
                        .WithMany("Redacoes")
                        .HasForeignKey("TipoRedacaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
